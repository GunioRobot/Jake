<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC "-//Apache Software Foundation//DTD XDOC 1.0//EN"
"http://maven.apache.org/dtd/xdoc_1_0.dtd">
<document>
  <properties>
    <title>Use Cases Overview</title>

    <author email="me@simonwallner.at">Simon Wallner</author>
    <author>Johannes Buchner</author>
    <author email="dominik.dorn@gmail.com">Dominik Dorn</author>
	 <author email="philipp.knobelspies@gmail.com">Philipp Knobelspies</author>
  </properties>
  <body>
<style>
h5{
font-size:medium;
padding: 0;
margin: 0.2cm 0;
}
</style>
    <section name="Use Cases">
    	<p>This page contains an overview of all use cases. Use cases are listed with a discriptive title and link to the full use case description. Every use case is identified by an unique identifier using the following syntax: [UC-&lt;Number&gt;]</p>
    	<p>Note: Since we don't yet need full use cases, a preliminary list of use cases without an identifier will suffice. Identifiers are added later on.</p>
    	
    	<subsection name="Overview">
    	<ul> <!-- TODO: update overview -->
		<li>[UC-01] Manage Data <br />
			<ul>
				<li><a href='#uc_01_01'>[UC-01:01] create note</a></li>
				<li><a href='#uc_01_03'>[UC-01:03] view note</a></li>
				<li><a href='#uc_01_10'>[UC-01:10] edit note</a></li>
				<li><a href='#uc_01_02'>[UC-01:02] import file/folder</a></li>
				<li><a href='#uc_01_04'>[UC-01:04] manage object tags</a></li>
				<li><a href='#uc_01_05'>[UC-01:05] delete object</a></li>
				<li><a href='#uc_01_06'>[UC-01:06] synchronize project</a></li>
				<li><a href='#uc_01_07'>[UC-01:07] set object synchronization mode</a></li>
				<li><a href='#uc_01_08'>[UC-01:08] open file/folder with OS specified program</a></li>
				<li><a href='#uc_01_09'>[UC-01:09] show datapool</a></li>
				<li><a href='#uc_01_10'>[UC-01:10] Find object by name or tag</a></li>
				<li><a href='#uc_01_11'>[UC-01:11] Check for new data/updates</a></li>
				<li><a href='#uc_01_12'>[UC-01:12] Edit object meta data</a></li>
			</ul>
		</li>
		
		<li>[UC-02] Manage Projectmembers <br />
			<ul>
				<li><a href='#uc_02_01'>[UC-02:01] Show project members</a></li>
				<li><a href='#uc_02_03'>[UC-02:03] Search users by ID / invite users</a></li>
				<li><a href='#uc_02_04'>[UC-02:04] Accept Project Invitation</a></li>
				<li><a href='#uc_02_06'>[UC-02:06] Add local comment to a project member</a></li>
				<li><a href='#uc_02_07'>[UC-02:07] Set local nickname for a project member</a></li>
				<li><a href='#uc_02_xx'>[UC-02:xx] </a></li>
				<li><a href='#uc_02_xx'>[UC-02:xx] </a></li>
			</ul>
		</li>
		<li>[UC-03] Manage Project <br />
			<ul>
				<li><a href='#uc_03_01'>[UC-03:01] Create new Project</a></li>
			</ul>
		</li>
		<li>[UC-04] Client Interactions <br />
			<ul>
				<li><a href='#uc_04_01'>[UC-04:01] Start log synchronisation</a></li>
				<li><a href='#uc_04_02'>[UC-04:02] Show out-of-sync objects</a></li>
				<li><a href='#uc_04_03'>[UC-04:03] Show changed objects</a></li>
				<li><a href='#uc_04_04'>[UC-04:04] Start log-propagation of changes</a></li>
				<li><a href='#uc_04_05'>[UC-04:05] Start pushing changed objects</a></li>
				<li><a href='#uc_04_06'>[UC-04:06] Start pulling changed objects</a></li>
				<li><a href='#uc_04_07'>[UC-04:07] Set automatic log synchronisation</a></li>
				<li><a href='#uc_04_08'>[UC-04:08] Set automatic object push</a></li>
				<li><a href='#uc_04_09'>[UC-04:09] Set automatic object pull</a></li>
				<li><a href='#uc_04_10'>[UC-04:10] Resolve version conflicts</a></li>

				<li><a href='#uc_04_11'>[UC-04:11] View Log</a></li>
				<li><a href='#uc_04_12'>[UC-04:12] Notify User of received message</a></li>
				<li><a href='#uc_04_13'>[UC-04:13] Read incomming message</a></li>
				<li><a href='#uc_04_14'>[UC-04:14] Write message to project member</a></li>
			</ul>
		</li>
		<li>[UC-05] Edit Programm Settings <br />
			<ul>
				<li><a href='#uc_05_01'>[UC-05:01] Set authentication Information</a></li>
				<li><a href='#uc_05_02'>[UC-05:02] Login to the network</a></li>
				<li><a href='#uc_05_03'>[UC-05:03] Logout from the network</a></li>
				<li><a href='#uc_05_04'>[UC-05:04] Set networking/project options</a></li> 
			</ul>
		</li>
		<li>[UC-06] Tagging <br />
			<ul>
				<li><a href='#uc_06_01'>[UC-06:01] Create Tag</a></li>
				<li><a href='#uc_06_03'>[UC-06:03] Delete Tag</a></li>
				<li><a href='#uc_06_04'>[UC-06:04] Assign Tag to Object</a></li>
				<li><a href='#uc_06_05'>[UC-06:05] Remove Tag from Object</a></li>
			</ul>
		</li>
    	</ul>
		</subsection>
    	<subsection name="Stable States">
			<table>
				<thead>
					<tr>
						<th>id</th>
						<th>stable states</th>
						<th>description</th>
					</tr>
				</thead>
				<tr>
					<td>[ST-01]</td>
					<td>application started</td>
					<td>The application is started</td>
				</tr>
				<tr>
					<td>[ST-02]</td>
					<td>project loaded</td>
					<td>
						<ul>
							<li>[ST-01]</li>
							<li>a project is loaded</li>
							<li>[UC-01:09] is executed every time this state is entered</li>
						</ul>
					</td>
				</tr>
			</table>
		</subsection>
	</section>
	
	<section name="Use Case Description">
		<!-- TODO: 
			Please read the assumptions first.
			Please read the ER-diagram first.
			 
			Important Use Cases that we mustn't miss:
			Please check that these exist and have a good wording:
			
			DIRECT REMOTE INTERACTION: -> refered to as [UC-04] Client interactions 
				sync log (assumption [logsync] [UC-04:01]
				push (assumption [push]) [UC-04:05] 
				pull (assumption [pull]) [UC-04:06]
				read incoming message ( assumption [no_chat] ) [UC-04:13] 
				leave message to project member ( assumption [no_chat] ) [UC-04:14]
			LOCAL: -> all other use cases

				create JakeObject [01:02], [01:01]
				remove JakeObject [01:05]
				edit project member list [nicht benoetigt.. wir loeschen ja auch keine user... ] 
				
				view log (projectwise) [04:11]
				tagging [UC-06]
		./		finding files
		./		view folder
			
			BASICS:
				create Project -> set rootpath
			
			Maybe the DIRECT REMOTE INTERACTION LOCAL and BASICS are good seperations of the use cases?
			Would someone group them by that and assign one person for LOCAL and another for the others?
			
			Maybe we should even drop the invitation system or at least set the priority very low.
			
			-->
		
		
		
		<subsection name="[UC-01:01] create note"><a name="uc_01_01" />
			<h5>Summary</h5>
			The user creates a new note.
			
			<h5>Rationale</h5>
			Key feature.
			
			<h5>Preconditions</h5>
			[ST-02]
			
			<h5>Course of Events</h5>
			<ol>
				<li>The user indicates to create a new note</li>
				<!-- there is no location to specify. Notes are entered per project -->
				<li>The user enters the text of the note</li> 
				<!-- that a title is shown too should go into the view use case -->
				<li>The user indicates to save the note</li>
				<li>The note is stored in the application.</li>
			</ol>
			
			<h5>Exceptions</h5>
			In 3.: If the user indicates to cancel the operation, no note will be created
			
			<h5>Alternative paths</h5>
			
			<h5>Postconditions</h5>
			A new note is created and the application is returned to its previous state.
			
			<h5>Frequency of use</h5>
			
			<h5>Priority</h5>
			
			<h5>Open issues</h5>
			
		</subsection>
		
		<subsection name="[UC-01:02] import file"><a name="uc_01_02" />
			<h5>Summary</h5>
			The User adds a file <!-- or a folder --> into a project folder.
			
			<h5>Rationale</h5>
			The User wants to share some of his files with the other members of the project.
			
			<h5>Preconditions</h5>
			[ST-02]
			
			<h5>Course of Events</h5>
			<ol>
				<li>The user indicates that he/she wants to add a file to the project.</li>
				<li>A list of possible files from the users file system is presented.</li>
				<li>The User selects a file or a folder and indicates to add this file/folder.</li>
				<li>The file/folder is added to the project datapool.</li>
			</ol>
			
			<h5>Exceptions</h5>
			In 3.: if the user indicates to cancel the operation, no note will be created
			
			<h5>Frequency of use</h5>
			2
			<h5>Priority</h5>
			3
			
			<h5>Open issues</h5>
			<p>This use case was: import file/folder; we don't necessarily want to implement dragging an folder in
				user should do that in the explorer? 
				When talking about folders, isn't that use case to share an existing folder as a new project?</p>
			
			<h5>Alternative paths</h5>
			(4). If the file is already in the project datapool, the user gets a warning.
			
			<h5>Postconditions</h5>
			<ul>
				<li>The specified file is in the datapool.</li>
				<li>The application returns to its previous state.</li>
			</ul>
		</subsection>
		
		<subsection name="[UC-01:03] view note"><a name="uc_01_03" />
			<h5>Summary</h5>
			View a note
			
			<h5>Rationale</h5>
			Key feature
			
			<h5>Preconditions</h5>
			<ul>
				<li>[ST-02]</li>
				<li>at least one note exists in the project</li>
			</ul>
			
			<h5>Course of Events</h5>
			<ol>
				<li>The user selects a note from the project an indicates to view it.</li>
				<li>The note is displayed in an editable form</li>
				<li>The user may change the content of the note</li>
				<li>The user indicates to save the changes</li>
			</ol>
			
			<h5>Exceptions</h5>
			
			<h5>Alternative paths</h5>
			In 4.: If the user indicates to cancel the operation, no changes are made to the note. 
			<!-- "The user is prompted to confirm the " <- yeah, to confirm what?  -->
			
			<h5>Postconditions</h5>
			The changes are performed to the note, and the application returns to its previous state.
			
			<h5>Frequency of use</h5>
			
			<h5>Priority</h5>
			
			<h5>Open issues</h5>
			
		</subsection>
		<subsection name="[UC-01:04] manage object tags"><a name="uc_01_04" />
			<h5>Summary</h5>
			The user has the ability to manage the tags associated to an JakeObject.
			
			<h5>Rationale</h5>
			Key feature.
			
			<h5>Preconditions</h5>
			<ul>
				<li>[ST-02]</li>
				<li>The object to be tagged exists in the project</li>
			</ul>
			
			<h5>Course of Events</h5>
			<ol>
				<li>The user select an object from the project and indicates to change the objects tags</li>
				<li>All existing tags of that object is presented, and the user may add, change or delete tags</li>
				<li>The user indicates to save the changes</li>
			</ol>
			
			<h5>Exceptions</h5>
			
			<h5>Alternative paths</h5>
			In 3.: If the user indicates to cancel the operation, no change will be performed.
			
			<h5>Postconditions</h5>
			The changes are stored, the application returns to its previous state.
			
			<h5>Frequency of use</h5>
			
			<h5>Priority</h5>
			
			<h5>Open issues</h5>
			
		</subsection>
		
		<subsection name="[UC-01:05] delete object"><a name="uc_01_05" />
			<h5>Summary</h5>
			The user selects an object from the datapool and indicates to remove it.
			
			<h5>Rationale</h5>
			The user wants to remove objects from the project root.
			
			<h5>Preconditions</h5>
			<ul>
				<li>[ST-02]</li>
				<li>at least one object exists in the project</li>
			</ul>
			
			<h5>Course of Events</h5>
			<ol>
				<li>The user selects an  objects from the datapool.</li>
				<li>The user indicates that he/she wants to delete the object.</li>
				<li>The user is prompted if he/she really wants to delete the objects.</li>
				<li>The objects are removed from the datapool.</li>
			</ol>
			
			<h5>Exceptions</h5>
			
			<h5>Alternative paths</h5>
			In 1. the user may select multiple objects. <br />
			In 3. the user may cancel the operation.<br />
			In 4. if the object cannot be deleted from the project the user will be notified.
			
			<h5>Postconditions</h5>
			The object is deleted from the project, the application return to its previous state
			
			<h5>Frequency of use</h5>
			
			<h5>Priority</h5>
			
			<h5>Open issues</h5>
			<p>Propagation of change: A LogEntry with the action "delete" is added. 
			The other users may or may not be asked to accept the change (maybe a preference setting).
			</p>
			<p>
				Maybe we should exclude the deletion of multiple objects. Saves implementation, 
				and getting asked more than once isn't a bad idea. If the user wants to mass-delete files,
				he/she can still do that in the file system and we will get every deletion.
			</p>
			
		</subsection>
		
		<subsection name="[UC-01:06] synchronize"><a name="uc_01_06" />
			<h5>Summary</h5>
			Synchronizing the data of the project with other clients
			
			<h5>Rationale</h5>
			Key feature.
			
			<h5>Preconditions</h5>
			<ul>
				<li>[ST-02]</li>
				<li>The client is connected to at least one other client</li>
			</ul>
			
			<h5>Course of Events</h5>
			<ol>
				<li>The user indicates to synchronize the project</li>
				<li>The application synchronizes the information, which JakeObjects are new or have changed, etc.</li>
			</ol>
			
			<h5>Exceptions</h5>
			In 2. if an error occurs, the user is prompted with an error message.<br />
			In 2. if a version conflict occurs the application assists the user to resolve the conflict. see [???] <!-- TODO: resolve conflict-usecase in here -->
			
			<h5>Alternative paths</h5>
			The project is synchronized, the application returns to its previous state
			
			<h5>Postconditions</h5>
			
			<h5>Frequency of use</h5>
			
			<h5>Priority</h5>
			
			<h5>Open issues</h5>
			
		</subsection>
		
		<subsection name="[UC-01:07] set object synchronization mode"><a name="uc_01_07" />
			<h5>Summary</h5>
			The user may set the "synchronization mode" preference for the project to perform push automatically or manually. The user may also choose to perform pull automatically or manually. 
			<!-- was: per file: too complicated. -->
			<!-- previously sounded like: either (autopull and autopush) or only manually. however, all combinations make sense. -->
			
			<!-- TODO: Maybe add regular log synchronisation -->
			
			<h5>Rationale</h5>
			Manual push/pull reduces the amount of bandwidth needed and gives the user more control over the traffic.
			
			<h5>Preconditions</h5>
			[ST-02]
			
			<h5>Course of Events</h5>
			<ol>
				<li>The user selects one object from the project and indicates to change the synchronization mode</li>
				<li>The user may choose between manual or auto</li>
				<li>The user indicates to safe the changes</li>
			</ol>
			
			<h5>Exceptions</h5>
			
			<h5>Alternative paths</h5>
			In 3.: The user may cancel the operation. No changes are stored
			
			<h5>Postconditions</h5>
			The synchronization mode is set for the object, the application returns to its previous state.
			
			<h5>Frequency of use</h5>
			
			<h5>Priority</h5>
			
			<h5>Open issues</h5>
			
		</subsection>
		
		<subsection name="[UC-01:08] open file/folder-object with associated program"><a name="uc_01_08" />
			<h5>Summary</h5>
			The user wants to open a file with an external application
			<!-- was: object. Notes don't make sense. -->
			<h5>Rationale</h5>
			Since Jake does not support editing data, there must be a way to open data in an external  application. 
			
			<h5>Preconditions</h5>
			<ul>
				<li>[ST-02]</li>
				<li>at least one file must exist in the project</li>
				<li>The operating system supports a method of launching the application associated with a file</li>
			</ul>
			
			<h5>Course of Events</h5>
			<ol>
				<li>The user indicates to open an object in an external application.</li>
				<li>The operating system is told to call an external application for editing the file.</li>
			</ol>
			
			<h5>Exceptions</h5>
			
			<h5>Alternative paths</h5>
			An error may occur during the process. In that case the user is prompted with an error message.
			
			<h5>Postconditions</h5>
			The object is opened in an external application, the application returns to its previous state.
			
			<h5>Frequency of use</h5>
			
			<h5>Priority</h5>
			
			<h5>Open issues</h5>
			
		</subsection>
		
		<subsection name="[UC-01:09] browse project files"><a name="uc_01_09" />
			<h5>Summary</h5>
			Navigate through the shared files.
			
			<h5>Rationale</h5>
			The user wants to view the files belonging to the project. He may do so hierarchically or by the help of tags.
			
			<h5>Preconditions</h5>
			[ST-02]
			
			<h5>Course of Events</h5>
			<ol>
				<li>The user indicates that the application is to show the datapool and its contents</li>
			</ol>
			
			<h5>Exceptions</h5>
			
			<h5>Alternative paths</h5>
			
			<h5>Postconditions</h5>
			All objects in the project are displayed by their name in their hierarchical order
			
			<h5>Frequency of use</h5>
			5
			
			<h5>Priority</h5>
			5
			
			<h5>Open issues</h5>
			
		</subsection>
		
		<subsection name="[UC-01:10] Find object by name or tag"><a name="uc_01_10" />
			<h5>Summary</h5>
			List all objects with a certain tag
			
			<h5>Rationale</h5>
			Finding JakeObjects either by name or tag
			
			<h5>Preconditions</h5>
			[ST-02]
			
			<h5>Course of Events</h5>
			<ol>
				<li>The user indicates he wants to perform a search.</li>
				<li>The user enters a search term</li>
				<li>The user may choose to only search for matching filenames, or tags, or both</li>
				<li>The user indicates to perform the search</li>
			</ol>
			
			<h5>Exceptions</h5>
			
			<h5>Alternative paths</h5>
			In 4. the user may cancel the operation, the application returns to its previous state
			
			<h5>Postconditions</h5>
			All matching JakeObjects in the project are listed so that the user can access them.
			
			<h5>Frequency of use</h5>
			
			<h5>Priority</h5>
			
			<h5>Open issues</h5>
			
		</subsection>
		
		<subsection name="[UC-01:11] Check for new Data/Updates"><a name="uc_01_11" />
			<h5>Summary</h5>
			
			<h5>Rationale</h5>
			
			<h5>Preconditions</h5>
			
			<h5>Course of Events</h5>
			
			<h5>Exceptions</h5>
			
			<h5>Alternative paths</h5>
			
			<h5>Postconditions</h5>
			
			<h5>Frequency of use</h5>
			
			<h5>Priority</h5>
			
			<h5>Open issues</h5>
			
		</subsection>

		
		<subsection name="[UC-01:12] Edit object meta data"><a name="uc_01_12" />
			<h5>Summary</h5>
			
			<h5>Rationale</h5>
			
			<h5>Preconditions</h5>
			
			<h5>Course of Events</h5>
			
			<h5>Exceptions</h5>
			
			<h5>Alternative paths</h5>
			
			<h5>Postconditions</h5>
			
			<h5>Frequency of use</h5>
			
			<h5>Priority</h5>
			
			<h5>Open issues</h5>
			
		</subsection>

		
		

		<subsection name="[UC-02:01] Show project members"><a name="uc_02_01" />
			<h5>Summary</h5>
			Display all the project members that are associated with the project.
			
			<h5>Rationale</h5>
			User wants to know who works on the project, and who access to the data.
			
			<h5>Preconditions</h5>
			[ST-02]
			
			<h5>Course of Events</h5>
			<ol>
				<li>The user indicates to view all project members</li>
			</ol>
			
			<h5>Exceptions</h5>
			
			<h5>Alternative paths</h5>
			The user may indicate to only display members that are currently online.
			
			<h5>Postconditions</h5>
			All project members are listed in alphabetical order by their name and online status. For those who are online, it is displayed whether the project is in sync or not (e.g if the local and remote project are in the same state)
			
			<h5>Frequency of use</h5>
			5
			<h5>Priority</h5>
			
			<h5>Open issues</h5>
			
		</subsection>
			

		<subsection name="[UC-02:03] Search users by ID / Invite users"><a name="uc_02_03" />
			<h5>Summary</h5>
			Search for users in the network by their ID. Invite them to join the project.
			
			<h5>Rationale</h5>
			A project needs project members. Connecting them can be made easier by invitations.
			
			<h5>Preconditions</h5>
			[ST-02] or the application is in the state of the postcondition of this UC
			
			<h5>Course of Events</h5>
			<ol>
				<li>The user indicates to search for other users</li>
				<li>The user enters a user ID</li>
				<li>The user indicates to perform the search</li>
				<li>The user selects a user</li>
				<li>The user invites the selected user</li>
			</ol>
			
			<h5>Exceptions</h5>
			
			<h5>Alternative paths</h5>
				<ul>
					<li>(4) No user is found</li>
					<li>(4) The user aborts the invitation</li>

				</ul>
			<h5>Postconditions</h5>
				<ul>
					<li>All matching users are listed in alphabetical oder by their ID and name (name, first-name)</li>
					<li>An invitation is sent to the new user, the application returns to its previous state.</li>
					<li>The user aborted the invitation. The application returns to its previous state.</li>
				</ul>
			
			<h5>Frequency of use</h5>
			
			<h5>Priority</h5>
			
			<h5>Open issues</h5>
		</subsection>
		

		<subsection name="[UC-02:04] Accept Project Invitation"><a name="uc_02_04" />
			<h5>Summary</h5>
			The users accepts a project invitation
			
			<h5>Rationale</h5>
			A project needs project members. Connecting them can be made easier by invitations.
			
			<h5>Preconditions</h5>
			<ul>
				<li>[ST-01]</li>
				<li>at least one pending invitation</li>
			</ul>
			
			<h5>Course of Events</h5>
			<ol>
				<li>A pending invitation is shown to the user with the date of issuing and the identity of the sender.</li>
				<li>The user accepts the invitation</li>
				<li>The user is prompted to chose a local location for the project folder</li>
				<li>The user is asked if he/she wants to synchronize the project data</li>
			</ol>
			
			<h5>Exceptions</h5>
			
			<h5>Alternative paths</h5>
			In 3. the user may reject the invitation. The invitation is rejected and the application returns to its previous state.<br />
			In 4. if an error occurs creating the project folder the error message is displayed.<br />
			In 5. the user may choose not to synchronize the project.
			
			<h5>Postconditions</h5>
			<ul>
				<li>The user is added to the project</li>
				<li>A project folder is created</li>
				<li>The new project is loaded</li>
				<li>The project data is synchronized (if chosen)</li>
				<li>The application returns to state [ST-02]</li>
			</ul>
			
			<h5>Frequency of use</h5>
			
			<h5>Priority</h5>
			
			<h5>Open issues</h5>
		</subsection>
			
		
	
		<subsection name="[UC-02:06] Add local comment to a project member"><a name="uc_02_06" />
		<!-- Der User soll einen lokalen kommentar zu einem user hinzufuegen koennen... dieser kommentar wird nicht
		distributiert, sondern nur lokal gespeichert. 
		-->
			<h5>Summary</h5>
			<h5>Rationale</h5>
			<h5>Preconditions</h5>
			<h5>Course of Events</h5>
			<h5>Exceptions</h5>
			<h5>Alternative paths</h5>
			<h5>Postconditions</h5>
			<h5>Frequency of use</h5>
			<h5>Priority</h5>
			<h5>Open issues</h5>
		</subsection>
		<subsection name="[UC-02:07] Set local nickname for a project member"><a name="uc_02_07" />
		<!-- Der User moechte einem projektmitglied einen eigenen nicknamen geben, damit dieser leichter
		erkennbar fuer den user ist (z.b. "johannes" statt jk13r )
		-->
			<h5>Summary</h5>
			<h5>Rationale</h5>
			<h5>Preconditions</h5>
			<h5>Course of Events</h5>
			<h5>Exceptions</h5>
			<h5>Alternative paths</h5>
			<h5>Postconditions</h5>
			<h5>Frequency of use</h5>
			<h5>Priority</h5>
			<h5>Open issues</h5>
		</subsection>




		<subsection name="[UC-03:01] Create new Project"><a name="uc_03_01" />
			<h5>Summary</h5>
				The User indicates to create a new project.	
			<h5>Rationale</h5>
				The User wants to create a new project. 
			<h5>Preconditions</h5>
				[ST-01]	
			<h5>Course of Events</h5>
				<ol>
					<li>The user indicates to create a new project</li>
					<li>The network settings (specially the project id) are setup</li> 
				</ol>
			<h5>Exceptions</h5>
			
			<h5>Alternative paths</h5>
			
			<h5>Postconditions</h5>
			
			<h5>Frequency of use</h5>
			
			<h5>Priority</h5>
			
			<h5>Open issues</h5>
			
		</subsection>
		
		<subsection name="[UC-04:01] Start log synchronisation"><a name="uc_04_01" />
			<!-- der user sagt "schickt mir eure log eintraege seit timestamp xxx" und die anderen clients schicken ihm die entsprechenden eintraege. wird benoetigt um zu erkennen welche files/objekte sich geaendert haben  -->
			<h5>Summary</h5>
			Syten updates the local Log
			
			<h5>Rationale</h5>
			Version control is only possible with a log which is up to date. Pull needs a Log to determine which files are out of date.
			<h5>Preconditions</h5>
			<ul>
				<li>[ST-02]</li>
				<li>The client is connected to at least one other client</li>
			</ul>
			
			<h5>Course of Events</h5>
			<ol>
			<li>The user indicates to update the log or to pull files</li>
			<li>The application synchronizes the log with other clients</li>
			<li>The local log is updated</li>
			</ol>
			
			<h5>Exceptions</h5>
			In 2. if an error occurs with the connection to the other client the user is prompted with an error message.<br />
			In 2. if the local log doesnt exist the new log is saved without synchronization <br />
			
			<h5>Alternative paths</h5>
			(3). The local log is newer than the remote log.<br />
			(4). The local log will not be changed.<br />
			(5). The remote server will recieve the local log.<br />
			
			<h5>Postconditions</h5>
			The log is the newest available
			<h5>Frequency of use</h5>
			3
			<h5>Priority</h5>
			3
			<h5>Open issues</h5>
			
		</subsection>
		<subsection name="[UC-04:02] Show out-of-sync objects"><a name="uc_04_02" />
			<!-- der user soll sehen, welche objekte nicht mehr aktuell sind (nach [logsync]) und beim pull geaendert werden wuerden. er kann dann fuer einzelne objekte die propagation mode festlegen  -->
			<h5>Summary</h5>
			The user wants to see what files are out of sync
			
			<h5>Rationale</h5>
			To keep the project members synchronized and to give the user an overwiev of files which have been changed and are out of sync.
			
			<h5>Preconditions</h5>
			[UC-04:01]
			
			<h5>Course of Events</h5>
			<ol>
			<li>The user indicates to get information about the sync level of files</li>
			<li>The application compares the timestamp of the local files with the log</li>
			<li>The application marks the files which do not have the newest available timestamp for that specific file</li>
			<li>The application asks the user which files should be set to propagation mode</li>
			</ol>
			
			<h5>Exceptions</h5>
			
			<h5>Alternative paths</h5>
			(3). The local files are all up to date.<br />
			
			<h5>Postconditions</h5>
			Files which are out of sync are marked.
			
			<h5>Frequency of use</h5>
			2
			
			<h5>Priority</h5>
			2
			
			<h5>Open issues</h5>
			
		</subsection>
		
		<subsection name="[UC-04:03] Show changed objects"><a name="uc_04_03" />
			<!-- der user soll sehen, welche objekte nach dem letzten pull geaendert wurden -->
			<h5>Summary</h5>
			List all objects which have been changed since the last pull.
			
			<h5>Rationale</h5>
			Shows the user which files are not in the latest version and need to be pulled.
			
			<h5>Preconditions</h5>
			[UC-04:01]
			
			<h5>Course of Events</h5>
			<ol>
			<li>The user indicates to get compare the local files with the most recent log</li>
			<li>The application compares the timestamp of the local files with the log</li>
			<li>The application marks the files which do not have the newest available timestamp for that specific file</li>
			</ol>
			
			<h5>Exceptions</h5>
			Files do not exist anymore in the log.
			
			<h5>Alternative paths</h5>
			(3). The local files are all up to date since the last pull.<br />
			
			<h5>Postconditions</h5>
			all files are marked which exist in a newer version in the log.
			
			<h5>Frequency of use</h5>
			2
			
			<h5>Priority</h5>
			3
			
			<h5>Open issues</h5>
			
		</subsection>
		


		<subsection name="[UC-04:04] Start log-propagation of changes"><a name="uc_04_04" />
		<!-- der user moechte explizit sagen "ich bin fertig mit dem editieren, sag den anderen dass ich was veraendert habe"... logentrys werden an andere user verteilt -->
			<h5>Summary</h5>
			The log is pushed to all available clients.
			
			<h5>Rationale</h5>
			Helps to keep the project in a current version.
			
			<h5>Preconditions</h5>
			[UC-04:01]
			
			<h5>Course of Events</h5>
			<ol>
			<li>The user indicates to propagate a change of the log</li>
			<li>The application pushes the new log</li>
			</ol>
			
			<h5>Exceptions</h5>
			No recent changes have been made to local log since the last pull of the log.
			
			<h5>Alternative paths</h5>
			
			<h5>Postconditions</h5>
			The log has been pushed to all available clients
			
			<h5>Frequency of use</h5>
			2
			
			<h5>Priority</h5>
			3
			
			<h5>Open issues</h5>
		</subsection>
		<subsection name="[UC-04:05] Start pushing changed objects"><a name="uc_04_05" />
		<!-- beginnt bzw. versucht aktiv geaenderte dateien an andere clients zu verschicken
		wichtig wenn z.b. eine aenderung gemacht wurde und diese umbedingt jetzt zumindest
		an einige clients verteilt werden soll, damit man danach offline gehen kann --> 
			<h5>Summary</h5>
			Files which have been changed locally can be pushed explicetly.
			
			<h5>Rationale</h5>
			Important files can be pushed to start an update process within in the project members.
			
			<h5>Preconditions</h5>
			[UC-04:01]
			
			<h5>Course of Events</h5>
			<ol>
			<li>The user indicates to push a file</li>
			<li>The application compares the timestamp of the local files with the files of other project members which are available</li>
			<li>The application pushes the files which have a newer timestamp</li>
			<li>The application reports back to the user of the success and the number of the pushes</li>
			</ol>
			
			<h5>Exceptions</h5>
			
			
			<h5>Alternative paths</h5>
			(4). All pushes where error occured are reported and will be repushed for a certain number of times.<br />
			
			<h5>Postconditions</h5>
			At least one succeeded push has been made.
			
			<h5>Frequency of use</h5>
			3
			
			<h5>Priority</h5>
			3
			
			<h5>Open issues</h5>
		</subsection>

		<subsection name="[UC-04:06] Start pulling changed objects"><a name="uc_04_06" />
		<!-- beginnt bzw. versucht aktiv, geaenderte dateien von anderen clients zu bekommen
		-->
			<h5>Summary</h5>
			The user wants to get the newest files from the project members.
			
			<h5>Rationale</h5>
			The user is able to get all changed files from the project group.
			
			<h5>Preconditions</h5>
			[UC-04:03]
			
			<h5>Course of Events</h5>
			<ol>
			<li>The user indicates to pull objects</li>
			<li>The application compares the timestamp of the local objects with the objects of other project members which are available trough the log</li>
			<li>The application pulls the objects which have an older timestamp in the local log</li>
			<li>The application reports back to the user of the success and the number of pulls which were made</li>
			<li>The application syncs the log</li>
			</ol>
			
			<h5>Exceptions</h5>
			
			<h5>Alternative paths</h5>
			(a 2.). All local objects are up to date.<br />
			(b 2.). A local objects is newer then the object of a project member.<br />
			(b 3.). <a href='#uc_04_05'>[UC-04:05] </a> is initiated for the objects of a project member which are out of date.  <br />
			
			<h5>Postconditions</h5>
			<h5>Frequency of use</h5>
			<h5>Priority</h5>
			<h5>Open issues</h5>
		</subsection>
		
		<subsection name="[UC-04:07] Set automatic log synchronisation"><a name="uc_04_07" />
		<!-- Der User moechte einstellen, ob das Log automatisch (z.b. in einem intervall)
		mit anderen clients synchronisiert werden soll
		-->
			<h5>Summary</h5>
			The user sets the automatic log synchronisation for a project.
			
			<h5>Rationale</h5>
			Automactially synchronizes the local projects log and therefore helps to keep the project in a global version.
			
			<h5>Preconditions</h5>
			<ul>
			<li>At least one project needs to exist</li>
			</ul>
			
			<h5>Course of Events</h5>
			<ol>
			<li>The user indicates to set the automatic log syncronisation</li>
			<li>The application opens a menu where the user can choose between his projects</li>
			<li>The application opens a menu where the user can enable, disable and set the synchronisation time</li>
			<li>The user changes the settings</li>
			<li>The application sets up an automatic log syncronisation based on the user settings for the given project</li>
			<li>The application shows an overview for all projects and their automatic log syncronisation</li>
			</ol>
			
			<h5>Exceptions</h5>
			
			<h5>Alternative paths</h5>
			(global) The user aborts the interaction. No changes will be saved. <br />
			(3) The user wants to change the log synchronisation for a different project. <br />
			
			<h5>Postconditions</h5>
			log synchronisation for a project are set to the users choice.
			
			<h5>Frequency of use</h5>
			3
			<h5>Priority</h5>
			3
			<h5>Open issues</h5>
		</subsection>

		<subsection name="[UC-04:08] Set automatic object push"><a name="uc_04_08" />
		<!-- Der user moechte einstellen, ob bei Aenderungen an Dateien generell automatisch
		versucht werden soll, diese an andere Mitglieder zu versenden
		-->
			<h5>Summary</h5>
			The users sets an automatisation of pushing files which have been changed.
			
			<h5>Rationale</h5>
			Helps to propagate changed files.
			This option may save bandwidth and gives the user more control over the traffic.
			
			<h5>Preconditions</h5>
			<ul>
			<li>At least one project needs to exist</li>
			</ul>
			
			<h5>Course of Events</h5>
			<ol>
			<li>The user indicates to set the automatic push for changed objects</li>
			<li>The application opens a menu where the user can choose between his projects</li>
			<li>The application opens a menu where the user can enable, disable and set the push time</li>
			<li>The user changes the settings</li>
			<li>The application sets up an automatic push for changed objects based on the user settings for the given project</li>
			<li>The application shows an overview for all projects and their automatic push for changed objects</li>
			</ol>
			
			<h5>Exceptions</h5>
			
			<h5>Alternative paths</h5>
			
			<h5>Postconditions</h5>
			Automatic pushing for changed objects for a project are set to the users choice.
				
			<h5>Frequency of use</h5>
			3
			
			<h5>Priority</h5>
			3
			
			<h5>Open issues</h5>
		</subsection>
		<subsection name="[UC-04:09] Set automatic object pull"><a name="uc_04_09" />
		<!-- Der user moechte einstellen, ob automatisch versucht werden soll
		geaenderte files bei anderen usern herunterzuladen
		-->
			<h5>Summary</h5>
			The users sets an automatisation of pulling objects.
			
			<h5>Rationale</h5>
			Helps to propagate changed files.
			This option may save bandwidth and gives the user more control over the traffic.
			
			<h5>Preconditions</h5>
			<ul>
			<li>At least one project needs to exist</li>
			</ul>
			
			<h5>Course of Events</h5>
			<ol>
			<li>The user indicates to set the automatic pull for changed objects</li>
			<li>The application opens a menu where the user can choose between his projects</li>
			<li>The application opens a menu where the user can enable, disable and set the pull time</li>
			<li>The user changes the settings</li>
			<li>The application sets up an automatic pull for changed objects based on the user settings for the given project</li>
			<li>The application shows an overview for all projects and their automatic pull for changed objects</li>
			</ol>
			
			<h5>Exceptions</h5>
			
			<h5>Alternative paths</h5>
			
			<h5>Postconditions</h5>
			Automatic pulling for objects for a project are set to the users choice.
				
			<h5>Frequency of use</h5>
			3
			
			<h5>Priority</h5>
			3
			
			<h5>Open issues</h5>
		</subsection>

		<subsection name="[UC-04:10] Resolve version conflicts"><a name="uc_04_10" />
		<!-- Bei logsync wurde herausgefunden, dass der User eine Datei bearbeitet hat, welche auch von einem
		anderen User bearbeitet wurde. er soll aufgefordert werden den konflikt zu beheben (z.b. durch manuelles
		bearbeiten der zwei dateien ) bzw. eine version (seine oder die andere) als neue "stable version" festzulegen. 
		-->
			<h5>Summary</h5>
			Resolving a version conflict
			
			<h5>Rationale</h5>
			Version conflict are common and need to be handled with.
			
			<h5>Preconditions</h5>
			[UC-04:01]
			
			<h5>Course of Events</h5>
			<ol>
			<li>The user changed an object</li>
			<li>The application tries to push the object or a pull is made within that time</li>
			<li>A newer version of the object exists then when it was opened and worked on locally for the first time</li>
			<li>The user is informed about a version conflict and needs to choose which file is the current one or he can save both locally and change them					by hand </li>
			<li>The Application pushes the new log which indicates such a version conflict and the new version of the changed version conflicted object is					pushed</li>
			<li>The users which caused the version conflict are informed about the decision made, regarding the actuall version conflicted object</li>
			</ol>
			
			<h5>Exceptions</h5>
			The user is not available when the conflict has been resolved. <br />
			The file can not be pushed. <br />
			
			<h5>Alternative paths</h5>
			
			<h5>Postconditions</h5>
			The version conflict has been changed.
			<h5>Frequency of use</h5>
			1
			<h5>Priority</h5>
			3
			<h5>Open issues</h5>
		</subsection>
		
		<subsection name="[UC-04:11] View Log"><a name="uc_04_11" />
		<!-- Der User soll die moeglichkeit haben, dass Logfile anzusehen und hierbei zu sehen, welche logentrys neu von anderen sind, welche neu von ihm erstellt wurden, welche bereits propagiert wurden, welche bereits lokal angewandt wurden (z.b. wenn ein eintrag sagt 'file xyz wurde bei user z geaendern' dann soll angezeigt werden, ob diese aenderung auch schon bei uns uebernommen wurde oder nicht) 
		-->
			<h5>Summary</h5>
			User can access the log which indicates version conflicts
			
			<h5>Rationale</h5>
			Gives the user an overview of versions of his project
			
			<h5>Preconditions</h5>
			[UC-04:01]
			
			<h5>Course of Events</h5>
			<ol>
			<li>The user indicates to open the version log</li>
			<li>The application opens the version log</li>
			<li>The user can initiate a file pull and push</li>
			<li>The application pushes and pulles objects</li>
			</ol>
			
			<h5>Exceptions</h5>
			no text editor is avalaible.
			
			<h5>Alternative paths</h5>
			(4) The user does not want a push/pull for the out of sync files. <br />

			<h5>Postconditions</h5>
			
			<h5>Frequency of use</h5>
			3
			<h5>Priority</h5>
			1
			<h5>Open issues</h5>
		</subsection>
		
		<subsection name="[UC-04:12] Notify User of received message"><a name="uc_04_12" />
		<!-- Der User hat eine Nachricht von einem anderen User erhalten und soll nun ueber dies
		benachrichtigt 	werden
		-->
			<h5>Summary</h5>
			The user gets notified of a newly recieved massage.
			
			<h5>Rationale</h5>
			Helps the user to stay informed about new massages.
			
			<h5>Preconditions</h5>
			[ST-02]
			
			<h5>Course of Events</h5>
			<ol>
			<li>The application revieves a new message</li>
			<li>The application notifies the user through a pop up that a new message has been recieved</li>
			<li>The user closes the pop up and therefore aknowledged the message</li>
			</ol>
			
			<h5>Exceptions</h5>
			
			<h5>Alternative paths</h5>
			
			<h5>Postconditions</h5>
			The user has been notified about a new message.
			
			<h5>Frequency of use</h5>
			3
			<h5>Priority</h5>
			3
			<h5>Open issues</h5>
			
		</subsection>

		<subsection name="[UC-04:13] Read incomming message"><a name="uc_04_13" />
		<!-- Der User hat eine Nachricht von einem anderen user bekommen und moechte sich diese
		nun anschauen
		-->
			<h5>Summary</h5>
			The user wants to view a new message.
			
			<h5>Rationale</h5>
			Allowes the user to read a new message.
			
			<h5>Preconditions</h5>
			[UC-04:12]
			
			<h5>Course of Events</h5>
			<ol>
			<li>The user indicates to read all new messages</li>
			<li>The application opens all new messages in a window</li>
			<li>The user closes the window</li>
			<li>The application marks the messages as read</li>
			</ol>
			
			<h5>Exceptions</h5>
			There are no new messages.
			
			<h5>Alternative paths</h5>
			
			<h5>Postconditions</h5>
			All new messages are marked as read.
			
			<h5>Frequency of use</h5>
			3
			<h5>Priority</h5>
			3
			<h5>Open issues</h5>
			
		</subsection>
		<subsection name="[UC-04:14] Write message to project member"><a name="uc_04_14" />
		<!-- Der User moechte einem anderen Projektmitglied eine nachricht schreiben
		-->
			<h5>Summary</h5>
			The user writes a message
			
			<h5>Rationale</h5>
			The user can write a message to a certain project member to communicate with the project member.

			<h5>Preconditions</h5>
			[UC-02:03] (without invitation)
			
			<h5>Course of Events</h5>
			<ol>
			<li>The user indicates to write a new messages</li>
			<li>The application opens a new window to create a message</li>
			<li>The user writes a message and chosses the recipients for the message from the current project member list</li>
			<li>The application sends the message to the specified members</li>
			<li>The application closes the window for creating messages</li>
			</ol>
			
			<h5>Exceptions</h5>
			No text is inserted.
			No recipient is selected.
			
			<h5>Alternative paths</h5>
			(4) One or more of the recipients are not online. The System tries to send the message again at a later pint of time. 
			<h5>Postconditions</h5>
			All messages are sent to the recipients
			
			<h5>Frequency of use</h5>
			3
			<h5>Priority</h5>
			3
			<h5>Open issues</h5>
		</subsection>
		
		<subsection name="[UC-0x:0x] xxx"><a name="uc_0x_0x" />
		<!-- xxx 
		-->
			<h5>Summary</h5>
			<h5>Rationale</h5>
			<h5>Preconditions</h5>
			<h5>Course of Events</h5>
			<h5>Exceptions</h5>
			<h5>Alternative paths</h5>
			<h5>Postconditions</h5>
			<h5>Frequency of use</h5>
			<h5>Priority</h5>
			<h5>Open issues</h5>
		</subsection>

		
		<subsection name="[UC-05:01] Edit preferences"><a name="uc_05_01" />
			<h5>Summary</h5>
			<!-- TODO: Authentication information, autopush and autopull set, etc. can be combined in this use case -->
			<!-- was: Set authentication Information -->
			
			<h5>Rationale</h5>
			
			<h5>Preconditions</h5>
			
			<h5>Course of Events</h5>
			
			<h5>Exceptions</h5>
			
			<h5>Alternative paths</h5>
			
			<h5>Postconditions</h5>
			
			<h5>Frequency of use</h5>
			
			<h5>Priority</h5>
			
			<h5>Open issues</h5>
			
		</subsection>
		
		<subsection name="[UC-05:02] Login to the network"><a name="uc_05_02" />
			<h5>Summary</h5>
			The User indicates to login to the network. 	
			<h5>Rationale</h5>
			The User wants to be connected to the network, so he/she is able to push/pull updates and sync logs.
			<h5>Preconditions</h5>
			[ST-02]
			<h5>Course of Events</h5>
				<ol>
					<li>The User indicates to log in to the network</li>
					<li>The User is logged in</li>
				</ol>
			<h5>Exceptions</h5>
				<ol>
					<li>The ICS throws an error</li>
				</ol>
			<h5>Alternative paths</h5>
				<ul>
					<li>(2). No Network connection is available - the User is not logged in.</li>
					<li>(2). The Users credentials are invailid - the User is not logged in.</li>

				</ul>
			<h5>Postconditions</h5>
				The User is logged in. 	
			<h5>Frequency of use</h5>
				5	
			<h5>Priority</h5>
				5
			<h5>Open issues</h5>
			I wouldn't offer such a functionality in the user interface. I would just connect on start, and you have to close it, if you want to logout/disconnect. Saves invalid states for use cases and GUI space.<br />
<font color='red'>Required by assumption [offline]</font>
			
		</subsection>
		
		<subsection name="[UC-05:04] Set networking/project options" id="test"><a name="uc_05_04" />
			<h5>Summary</h5>
				The User indicates to specify the networking settings
			<h5>Rationale</h5>
				The User may want to specify the settings for networking, e.g. specify
				another login server, specify a proxy server, set project id etc.
			<h5>Preconditions</h5>
			[ST-02]
			<h5>Course of Events</h5>
				<ol>
					<li>The User indicates to change the network settings</li>
					<li>The User is presented with a dialog where he/she can changes the login server to use, his userid, his password and the pseudo-unique project id.</li>
				</ol>
			<h5>Exceptions</h5>
				<ul>
					<li>ICS throws Error, e.g. no network connection available, cannot propagate logout activity to network server</li>
				</ul>
			<h5>Alternative paths</h5>
				<ul>
					<li>(2) All fields except proxy server and password are not editable after the first sync of the project or after other users have been invited or joined the project.</li>
				</ul>
			<h5>Postconditions</h5>
			[ST-02]
			
			<h5>Frequency of use</h5>
				3
			<h5>Priority</h5>
				5
			<h5>Open issues</h5>
		</subsection>
		
		<subsection name="[UC-05:03] Logout from the network"><a name="uc_05_03" />
			<h5>Summary</h5>
				The User indicates to logout from the network
			<h5>Rationale</h5>
				The User wants to logout from the network, so the other projectmembers
				 don't bother him with changes.
			<h5>Preconditions</h5>
			[ST-02]
			<h5>Course of Events</h5>
				<ol>
					<li>The User indicates to logout</li>
					<li>The User is logged out</li>
				</ol>
			<h5>Exceptions</h5>
				<ul>
					<li>ICS throws Error, e.g. no network connection available, cannot propagate logout activity to network server</li>
				</ul>
			<h5>Alternative paths</h5>
				<ul>
					<li>(1) The User closes the application, logout is performed automatically</li>
					<li>(2) An exception occurs, a warning is displayed to the user, informing that he couldn't be logged out and may still appear online on other clients</li>
				</ul>
			<h5>Postconditions</h5>
			[ST-02]
			
			<h5>Frequency of use</h5>
				3
			<h5>Priority</h5>
				5
			<h5>Open issues</h5>
			I wouldn't offer such a functionality in the user interface. I would just connect on start, and you have to close it, if you want to logout/disconnect. Saves invalid states for use cases and GUI space.
<br />
<font color='red'>Required by assumption [offline]</font>
			
		</subsection>
		
		
		<subsection name="[UC-06:01] Create Tag"><a name="uc_06_01" />
		<!-- Der User erstellt einen Tag, der Tag wird in der DB abgelegt und an andere User versendet (logentry)
		-->
			<h5>Summary</h5>
			<h5>Rationale</h5>
			<h5>Preconditions</h5>
			<h5>Course of Events</h5>
			<h5>Exceptions</h5>
			<h5>Alternative paths</h5>
			<h5>Postconditions</h5>
			<h5>Frequency of use</h5>
			<h5>Priority</h5>
			<h5>Open issues</h5>
		</subsection>
		<subsection name="[UC-06:03] Delete Tag"><a name="uc_06_03" />
		<!-- Der User loescht einen Tag, der Tag wird vom Programm automatisch von allen Objekten entfernt. Es wird aber nur ein Logentry generiert, der besagt dass der tag geloescht wurde (und nicht etwa fuer jedes objekt einen eigenen)
		-->
			<h5>Summary</h5>
			<h5>Rationale</h5>
			<h5>Preconditions</h5>
			<h5>Course of Events</h5>
			<h5>Exceptions</h5>
			<h5>Alternative paths</h5>
			<h5>Postconditions</h5>
			<h5>Frequency of use</h5>
			<h5>Priority</h5>
			<h5>Open issues</h5>
		</subsection>
		<subsection name="[UC-06:04] Assign Tag to Object"><a name="uc_06_04" />
		<!-- Der User fuegt einen Tag zu einem Objekt hinzu.
		-->
			<h5>Summary</h5>
			<h5>Rationale</h5>
			<h5>Preconditions</h5>
			<h5>Course of Events</h5>
			<h5>Exceptions</h5>
			<h5>Alternative paths</h5>
			<h5>Postconditions</h5>
			<h5>Frequency of use</h5>
			<h5>Priority</h5>
			<h5>Open issues</h5>
		</subsection>
		<subsection name="[UC-06:05] Remove Tag from Object"><a name="uc_06_05" />
		<!-- Der User entfernt einen Tag von einem bestimmten Objekt (d.h. es wird ein Logentry generiert)
		-->
			<h5>Summary</h5>
			<h5>Rationale</h5>
			<h5>Preconditions</h5>
			<h5>Course of Events</h5>
			<h5>Exceptions</h5>
			<h5>Alternative paths</h5>
			<h5>Postconditions</h5>
			<h5>Frequency of use</h5>
			<h5>Priority</h5>
			<h5>Open issues</h5>
		</subsection>
		<subsection name="[UC-0x:0x] xxx"><a name="uc_0x_0x" />
		<!-- xxx 
		-->
			<h5>Summary</h5>
			<h5>Rationale</h5>
			<h5>Preconditions</h5>
			<h5>Course of Events</h5>
			<h5>Exceptions</h5>
			<h5>Alternative paths</h5>
			<h5>Postconditions</h5>
			<h5>Frequency of use</h5>
			<h5>Priority</h5>
			<h5>Open issues</h5>
		</subsection>
		<subsection name="[UC-0x:0x] xxx"><a name="uc_0x_0x" />
		<!-- xxx 
		-->
			<h5>Summary</h5>
			<h5>Rationale</h5>
			<h5>Preconditions</h5>
			<h5>Course of Events</h5>
			<h5>Exceptions</h5>
			<h5>Alternative paths</h5>
			<h5>Postconditions</h5>
			<h5>Frequency of use</h5>
			<h5>Priority</h5>
			<h5>Open issues</h5>
		</subsection>
		
		
	</section>
	
    <section name="Changelog">
		<table>
			<tr>
			  <td>No.</td>
			  <td>Date</td>
			  <td>Author</td>
			  <td>Change</td>
			</tr>
	
			<tr>
			  <td>1</td>
			  <td>2008-04-17</td>
			  <td>simon</td>
			  <td>created</td>
			</tr>
			<tr>
			  <td>2</td>
			  <td>2008-04-23</td>
			  <td>dominik</td>
			  <td>updated list of use cases</td>
			</tr>
			<tr>
			  <td>3</td>
			  <td>2008-04-23</td>
			  <td>dominik</td>
			  <td>created tables for use cases, made them clickable</td>
			</tr>
			<tr>
			  <td>4</td>
			  <td>2008-04-23</td>
			  <td>simon</td>
			  <td>added &quot;to top&quot; links</td>
			</tr>
			<tr>
			  <td>5</td>
			  <td>2008-04-24</td>
			  <td>dominik</td>
			  <td>created some of the use case informaiton</td>
			</tr>
			<tr>
				<td>6</td>
				<td>2008-04-28</td>
				<td>simon</td>
				<td>added descriptions to some use cases</td>
			</tr>
			<tr>
				<td>7</td>
				<td>2008-04-30</td>
				<td>dominik</td>
				<td>Added additional rows to each table, reordered some use cases. </td>
			</tr>
			<tr>
				<td>8</td>
				<td>2008-04-30</td>
				<td>johannes</td>
				<td>Cleared formatting and made editing easier. 
					General reworking of content. </td>
			</tr>
			<tr>
				<td>9</td>
				<td>2008-05-01</td>
				<td>dominik</td>
				<td>completed some use cases</td>
			</tr>
			<tr>
				<td>10</td>
				<td>2008-05-03</td>
				<td>philipp</td>
				<td>completed some use cases</td>
			</tr>
		
			
		  </table>
      </section>
  </body>
</document>
