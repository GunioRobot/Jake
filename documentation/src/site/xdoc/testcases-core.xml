<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC "-//Apache Software Foundation//DTD XDOC 1.0//EN"
		"http://maven.apache.org/dtd/xdoc_1_0.dtd">
<document>
	<properties>
		<title>Core Function Tests</title>

		<author email="dominik.dorn@gmail.com">Dominik Dorn</author>
	</properties>

	<body>
		<section name="Core Function tests">
			<subsection name="Core:Services:IJakeGuiAccess">
				This is the Interface provided for the GUI to fulfill the required use cases.
				<br/>
				Because the functions in question are already tested with unit tests in the other components,
				testing this Interface has very little priority. Errors have to be looked up in the corresponding
				component.

				<br/>Preconditions:
				<ul>
					<li>The Program is started</li>
				</ul>
				<table>
					<thead>
						<tr>
							<th width="80">Test-Case#</th>
							<th width="400">Function</th>
							<th>Expected result</th>
							<th>Inputs</th>
							<th>Achieved Result</th>
							<th>Error Behaviour</th>
							<th width="40">Passed?</th>
							<th width="100">Priority</th>
							<th width="100">Type</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td>55</td>
							<!-- test case # //-->
							<td>Test the functions</td>
							<!-- function //-->
							<td>The requests should be forwarded to the corresponding component in the core</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very High</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>SC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>
					</tbody>
				</table>

			</subsection>


			<subsection name="Core:Domain:FileObject">
				Tests the functionality of the FileObject-POJO

				<br/>Preconditions:
				<ul>
					<li>The Program is started</li>
					<li>A project is opened</li>
					<li>The user is authenticated</li>
				</ul>
				<table>
					<thead>
						<tr>
							<th width="80">Test-Case#</th>
							<th width="400">Function</th>
							<th>Expected result</th>
							<th>Inputs</th>
							<th>Achieved Result</th>
							<th>Error Behaviour</th>
							<th width="40">Passed?</th>
							<th width="100">Priority</th>
							<th width="100">Type</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td>56</td>
							<!-- test case # //-->
							<td>Get RelPath</td>
							<!-- function //-->
							<td>Gets the RelPath of the File the FileObjects represents.</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very High</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>NC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>

					</tbody>
				</table>

			</subsection>

			<subsection name="Core:Domain:NoteObject">
				Tests the functionality of the NoteObject-POJO

				<br/>Preconditions:
				<ul>
					<li>The Program is started</li>
					<li>A project is opened</li>
					<li>The user is authenticated</li>
				</ul>
				<table>
					<thead>
						<tr>
							<th width="80">Test-Case#</th>
							<th width="400">Function</th>
							<th>Expected result</th>
							<th>Inputs</th>
							<th>Achieved Result</th>
							<th>Error Behaviour</th>
							<th width="40">Passed?</th>
							<th width="100">Priority</th>
							<th width="100">Type</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td>57</td>
							<!-- test case # //-->
							<td>Get the content of the Note</td>
							<!-- function //-->
							<td>Content of the note is returned</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very High</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>NC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>
						<tr>
							<td>58</td>
							<!-- test case # //-->
							<td>Set the content of the note object</td>
							<!-- function //-->
							<td>Content of the note object is set</td>
							<!-- expected result -->
							<td>Content = somecontent</td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very High</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>NC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>

					</tbody>
				</table>

			</subsection>

			<subsection name="Core:Domain:JakeObject">
				Tests the functionality of the JakeObject POJO

				<br/>Preconditions:
				<ul>
					<li>The Program is started</li>
					<li>A project is opened</li>
					<li>The user is authenticated</li>
				</ul>
				<table>
					<thead>
						<tr>
							<th width="80">Test-Case#</th>
							<th width="400">Function</th>
							<th>Expected result</th>
							<th>Inputs</th>
							<th>Achieved Result</th>
							<th>Error Behaviour</th>
							<th width="40">Passed?</th>
							<th width="100">Priority</th>
							<th width="100">Type</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td>59</td>
							<!-- test case # //-->
							<td>Get the Name of the JakeObject</td>
							<!-- function //-->
							<td>Return the name of the JakeObject</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Medium</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>NC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>
						<tr>
							<td>60</td>
							<!-- test case # //-->
							<td>Add a Tag to a JakeObject</td>
							<!-- function //-->
							<td>Tag is added</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very High</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>NC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>

						<tr>
							<td>61</td>
							<!-- test case # //-->
							<td>Get List of tags</td>
							<!-- function //-->
							<td>returns the list of JakeObjects</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very High</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>NC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>
						<tr>
							<td>62</td>
							<!-- test case # //-->
							<td>Remove a tag from a JakeObject</td>
							<!-- function //-->
							<td>Tag is removed from the object, not in taglist anymore</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Medium</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>NC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>


					</tbody>
				</table>

			</subsection>

			<subsection name="Core:Domain:JakeMessage">
				Tests the functionality of the JakeMessage-POJO


				<br/>Preconditions:
				<ul>
					<li>The Program is started</li>
					<li>A project is opened</li>
					<li>The user is authenticated</li>
				</ul>
				<table>
					<thead>
						<tr>
							<th width="80">Test-Case#</th>
							<th width="400">Function</th>
							<th>Expected result</th>
							<th>Inputs</th>
							<th>Achieved Result</th>
							<th>Error Behaviour</th>
							<th width="40">Passed?</th>
							<th width="100">Priority</th>
							<th width="100">Type</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td>63</td>
							<!-- test case # //-->
							<td>Check Content length</td>
							<!-- function //-->
							<td>throw InvalidMessageContentLengthException if too short or too long</td>
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very High</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>FC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>
						<tr>
							<td>64</td>
							<!-- test case # //-->
							<td>Check equals() method</td>
							<!-- function //-->
							<td>Two Objects configured the same way return true on obja.equals(objb).</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Medium</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>NC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>

						<tr>
							<td>65</td>
							<!-- test case # //-->
							<td>Check hashCode() method</td>
							<!-- function //-->
							<td>Two Objects configured the same way return the same hashCode()</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Medium</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>NC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>

						<tr>
							<td>66</td>
							<!-- test case # //-->
							<td>Check Valid Recipient</td>
							<!-- function //-->
							<td>throw InvalidProjectMemberException</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very High</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>FC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>

						<tr>
							<td>67</td>
							<!-- test case # //-->
							<td>Check Valid Sender</td>
							<!-- function //-->
							<td>throw InvalidProjectMemberException</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very High</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>FC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>


					</tbody>
				</table>

			</subsection>

			<subsection name="Coer:Domain:LogAction">
				Tests the functionality of the LogAction POJO
				<br/>

				<br/>Nothing to test because LogAction is a Enum
			</subsection>

			<subsection name="Core:Domain:LogEntry">
				Tests the functionality of the LogEntry-POJO

				<table>
					<thead>
						<tr>
							<th width="80">Test-Case#</th>
							<th width="400">Function</th>
							<th>Expected result</th>
							<th>Inputs</th>
							<th>Achieved Result</th>
							<th>Error Behaviour</th>
							<th width="40">Passed?</th>
							<th width="100">Priority</th>
							<th width="100">Type</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td>68</td>
							<!-- test case # //-->
							<td>Ensure correct LogAction supplied</td>
							<!-- function //-->
							<td>throw InvalidLogActionException</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very High</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>FC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>
						<tr>
							<td>69</td>
							<!-- test case # //-->
							<td>Ensure valid JakeObjectName supplied</td>
							<!-- function //-->
							<td>throw InvalidJakeObjectNameException</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very High</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>FC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>

						<tr>
							<td>70</td>
							<!-- test case # //-->
							<td>Test hashCode() method</td>
							<!-- function //-->
							<td>Two LogEntrys with the same propertys have the same hashCode()</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very High</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>NC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>
						<tr>
							<td>71</td>
							<!-- test case # //-->
							<td>Test equals() method</td>
							<!-- function //-->
							<td>Two LogEntrys with the same propertys return true on obj1.equals(obj2)</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very High</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>NC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>


					</tbody>
				</table>

			</subsection>

			<subsection name="Core:Domain:Project">
				Tests the functionality of the Projoct-POJO


				<br/>Preconditions:
				<ul>
					<li>The Program is started</li>
					<li>A project is opened</li>
					<li>The user is authenticated</li>
				</ul>
				<table>
					<thead>
						<tr>
							<th width="80">Test-Case#</th>
							<th width="400">Function</th>
							<th>Expected result</th>
							<th>Inputs</th>
							<th>Achieved Result</th>
							<th>Error Behaviour</th>
							<th width="40">Passed?</th>
							<th width="100">Priority</th>
							<th width="100">Type</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td>72</td>
							<!-- test case # //-->
							<td>Create a empty Project</td>
							<!-- function //-->
							<td>an empty project object is returned</td>
							<!-- expected result -->
							<td>none</td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very High</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>NC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>
						<tr>
							<td>73</td>
							<!-- test case # //-->
							<td>Access ProjectFolder of uninitialized Project Object</td>
							<!-- function //-->
							<td>throw ProjectNotConfiguredException</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very high</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>FC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>
						<tr>
							<td>74</td>
							<!-- test case # //-->
							<td>Access ProjectId of uninitialized Project Object</td>
							<!-- function //-->
							<td>throw ProjectNotConfiguredException</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very High</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>FC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>

						<tr>
							<td>75</td>
							<!-- test case # //-->
							<td>Access ProjectName of uninitialized Project Object</td>
							<!-- function //-->
							<td>throw ProjectNotConfiguredException</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very high</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>FC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>
						<tr>
							<td>76</td>
							<!-- test case # //-->
							<td>Create a Project with a valid path</td>
							<!-- function //-->
							<td>ProjectObject with RootPath property set</td>
							<!-- expected result -->
							<td>rootPath = valid path</td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very high</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>NC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>

						<tr>
							<td>77</td>
							<!-- test case # //-->
							<td>Create a Project with a File instead of a directory as path</td>
							<!-- function //-->
							<td>throw InvalidRootPathException</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td></td>
							<!-- priority: very high, high, medium, low, very low -->
							<td></td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>

						<tr>
							<td>78</td>
							<!-- test case # //-->
							<td>Create a Project with an non existend root path</td>
							<!-- function //-->
							<td>throw InvalidRootPathException</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very High</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>FC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>

						<tr>
							<td>79</td>
							<!-- test case # //-->
							<td>Create a Project with a null value as root path</td>
							<!-- function //-->
							<td>throw InvalidRootPathException</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very High</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>FC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>

						<tr>
							<td>80</td>
							<!-- test case # //-->
							<td>Create a Project with a valid Project name</td>
							<!-- function //-->
							<td>Project Object with Project Name property set</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very High</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>NC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>

						<tr>
							<td>81</td>
							<!-- test case # //-->
							<td>Create a Project with just a character as Project name</td>
							<!-- function //-->
							<td>throw InvalidProjectNameException</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very High</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>FC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>

						<tr>
							<td>82</td>
							<!-- test case # //-->
							<td>Create a Project with a too long Project name</td>
							<!-- function //-->
							<td>throw InvalidProjectNameException</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very High</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>FC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>

						<tr>
							<td>83</td>
							<!-- test case # //-->
							<td>Create a Project with a Project name of the maximum width</td>
							<!-- function //-->
							<td>Valid Project Object with Project Name property set</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very High</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>NC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>
						<tr>
							<td>84</td>
							<!-- test case # //-->
							<td>Create a Project with an empty Project name</td>
							<!-- function //-->
							<td>throw InvalidProjectNameException</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very High</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>FC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>

						<tr>
							<td>85</td>
							<!-- test case # //-->
							<td>Create a Project with an null value for the project name</td>
							<!-- function //-->
							<td>throw InvalidProjectNameException</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very high</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>FC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>

						<tr>
							<td>86</td>
							<!-- test case # //-->
							<td>Create a Project with a valid project id</td>
							<!-- function //-->
							<td>Project Object with project id property set</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very high</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>NC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>

						<tr>
							<td>87</td>
							<!-- test case # //-->
							<td>Create a Project with an empty Project Id</td>
							<!-- function //-->
							<td>throw InvalidProjectIdException</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very high</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>FC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>
						<tr>
							<td>88</td>
							<!-- test case # //-->
							<td>Create a Project with an null value as ProjectId</td>
							<!-- function //-->
							<td>throw InvalidProjectIdException</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very High</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>FC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>
						<tr>
							<td>89</td>
							<!-- test case # //-->
							<td>Create a Project with an too short ProjectId</td>
							<!-- function //-->
							<td>throw InvalidProjectIdException</td>
							<!-- expected result -->
							<td>&lt;8 chars</td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very high</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>FC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>
						<tr>
							<td>90</td>
							<!-- test case # //-->
							<td>Create a Project with a too long ProjectId</td>
							<!-- function //-->
							<td>throw InvalidProjectIdException</td>
							<!-- expected result -->
							<td>&gt;8 chars</td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very high</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td></td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>
						<tr>
							<td>91</td>
							<!-- test case # //-->
							<td>Create a Project with a correct RootPath, ProjectName &amp; ProjectId</td>
							<!-- function //-->
							<td>Fully complete Project-Object</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very high</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>NC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>
						<tr>
							<td>92</td>
							<!-- test case # //-->
							<td>Test the equals() method of a Project Object</td>
							<!-- function //-->
							<td>The comparison between two Projects configured the same way returns true</td>
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very High</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>NC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>
						<tr>
							<td>93</td>
							<!-- test case # //-->
							<td>Test the hashCode() metho of a Proejct Object</td>
							<!-- function //-->
							<td>Two Projects configrued the same way return the same hashCode()</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td></td>
							<!-- priority: very high, high, medium, low, very low -->
							<td></td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>
					</tbody>
				</table>

			</subsection>

			<subsection name="Core:Domain:Tag">
				Tests the functionality of the Tag-POJO

				<table>
					<thead>
						<tr>
							<td width="80">Test-Case#</td>
							<td width="400">Function</td>
							<td>Expected result</td>
							<td>Inputs</td>
							<td>Achieved Result</td>
							<td>Error Behaviour</td>
							<td width="40">Passed?</td>
							<td width="100">Priority</td>
							<td width="100">Type</td>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td>94</td>
							<!-- test case # //-->
							<td>Create a Tag with a valid name</td>
							<!-- function //-->
							<td>The corresponding Tag Object gets created</td>
							<!-- expected result -->
							<td>name=SomethingUsefull</td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very High</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>NC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>

						<tr>
							<td>95</td>
							<td>Create a tag with an invalid name (Whitespace in it)</td>
							<!-- function //-->
							<td>throw a InvalidTagNameException</td>
							<!-- expected result -->
							<td>name: &quot;some invalid name&quot;</td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very High</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>FC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>

						<tr>
							<td>96</td>
							<!-- test case # //-->
							<td>Create a tag with an invalid name (null value)</td>
							<!-- function //-->
							<td>throw InvalidTagNameException</td>
							<!-- expected result -->
							<td>name=null</td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Very High</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>FC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->

						</tr>


						<tr>
							<td>97</td>
							<!-- test case # //-->
							<td>Test the equals method of two tag objects</td>
							<!-- function //-->
							<td>two tag objects with the same tag equals</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Medium</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>NC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->

						</tr>
						<tr>
							<td>98</td>
							<!-- test case # //-->
							<td>Check the hashCode method of two tag objects</td>
							<!-- function //-->
							<td>two tag objects with the same tag have the same hashCode</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Medium</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>NC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>

						<tr>
							<td>99</td>
							<!-- test case # //-->
							<td>Test the toString() method of a Tag object</td>
							<!-- function //-->
							<td>toString() returns the name of the tag</td>
							<!-- expected result -->
							<td></td>
							<!-- inputs -->
							<td></td>
							<!-- achieved result [blank] -->
							<td></td>
							<!-- behaviour in case of error -->
							<td></td>
							<!-- passed? -->
							<td>Medium</td>
							<!-- priority: very high, high, medium, low, very low -->
							<td>NC</td>
							<!-- type: normal case nc, failure case fc, special case sc -->
						</tr>


					</tbody>
				</table>
			</subsection>		</section>

		<section name="Changelog">
			<table>
				<thead>
					<tr>
						<th>No.</th>
						<th>Date</th>
						<th>Author</th>
						<th>Change</th>
					</tr>
				</thead>

				<tr>
					<td>1</td>
					<td>01.06.2008</td>
					<td>JB</td>
					<td>moved from main document</td>
				</tr>
			</table>
		</section>
	</body>
</document>
